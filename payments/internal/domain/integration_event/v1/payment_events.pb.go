// -----------------------------------------------------------------------------
// Public integration events for the Payments service.
// Produced by: payments
// Consumed by: billing (and other domains)
// Transport:   Kafka (single topic recommended)
// Contract:    Provider-agnostic, stable, backward-compatible.
// IMPORTANT:   Never include provider secrets or raw provider IDs here.
// -----------------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: domain/integration_event/v1/payment_events.proto

package integrationeventv1

import (
	money "google.golang.org/genproto/googleapis/type/money"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// -----------------------------------------------------------------------------
// Business dimensions needed by consumers to rehydrate semantics.
// -----------------------------------------------------------------------------
type PaymentKind int32

const (
	PaymentKind_PAYMENT_KIND_UNSPECIFIED  PaymentKind = 0
	PaymentKind_PAYMENT_KIND_ONE_TIME     PaymentKind = 1 // one-off purchase
	PaymentKind_PAYMENT_KIND_SUBSCRIPTION PaymentKind = 2 // recurring charge
)

// Enum value maps for PaymentKind.
var (
	PaymentKind_name = map[int32]string{
		0: "PAYMENT_KIND_UNSPECIFIED",
		1: "PAYMENT_KIND_ONE_TIME",
		2: "PAYMENT_KIND_SUBSCRIPTION",
	}
	PaymentKind_value = map[string]int32{
		"PAYMENT_KIND_UNSPECIFIED":  0,
		"PAYMENT_KIND_ONE_TIME":     1,
		"PAYMENT_KIND_SUBSCRIPTION": 2,
	}
)

func (x PaymentKind) Enum() *PaymentKind {
	p := new(PaymentKind)
	*p = x
	return p
}

func (x PaymentKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentKind) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_integration_event_v1_payment_events_proto_enumTypes[0].Descriptor()
}

func (PaymentKind) Type() protoreflect.EnumType {
	return &file_domain_integration_event_v1_payment_events_proto_enumTypes[0]
}

func (x PaymentKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentKind.Descriptor instead.
func (PaymentKind) EnumDescriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{0}
}

type CaptureMode int32

const (
	CaptureMode_CAPTURE_MODE_UNSPECIFIED CaptureMode = 0
	CaptureMode_CAPTURE_MODE_IMMEDIATE   CaptureMode = 1 // charge now (Created -> Paid)
	CaptureMode_CAPTURE_MODE_MANUAL      CaptureMode = 2 // authorize now, capture later (hold)
)

// Enum value maps for CaptureMode.
var (
	CaptureMode_name = map[int32]string{
		0: "CAPTURE_MODE_UNSPECIFIED",
		1: "CAPTURE_MODE_IMMEDIATE",
		2: "CAPTURE_MODE_MANUAL",
	}
	CaptureMode_value = map[string]int32{
		"CAPTURE_MODE_UNSPECIFIED": 0,
		"CAPTURE_MODE_IMMEDIATE":   1,
		"CAPTURE_MODE_MANUAL":      2,
	}
)

func (x CaptureMode) Enum() *CaptureMode {
	p := new(CaptureMode)
	*p = x
	return p
}

func (x CaptureMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CaptureMode) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_integration_event_v1_payment_events_proto_enumTypes[1].Descriptor()
}

func (CaptureMode) Type() protoreflect.EnumType {
	return &file_domain_integration_event_v1_payment_events_proto_enumTypes[1]
}

func (x CaptureMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CaptureMode.Descriptor instead.
func (CaptureMode) EnumDescriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{1}
}

// Canonical cancellation categories (provider-agnostic).
// Map any provider-specific codes into these buckets; unknown -> *_UNSPECIFIED.
type CancelReason int32

const (
	CancelReason_CANCEL_REASON_UNSPECIFIED CancelReason = 0
	CancelReason_CANCEL_REASON_USER        CancelReason = 1 // user canceled
	CancelReason_CANCEL_REASON_SYSTEM      CancelReason = 2 // business rule/timeout
	CancelReason_CANCEL_REASON_AUTH_VOID   CancelReason = 3 // authorization voided
	CancelReason_CANCEL_REASON_DUPLICATE   CancelReason = 4 // duplicate request
)

// Enum value maps for CancelReason.
var (
	CancelReason_name = map[int32]string{
		0: "CANCEL_REASON_UNSPECIFIED",
		1: "CANCEL_REASON_USER",
		2: "CANCEL_REASON_SYSTEM",
		3: "CANCEL_REASON_AUTH_VOID",
		4: "CANCEL_REASON_DUPLICATE",
	}
	CancelReason_value = map[string]int32{
		"CANCEL_REASON_UNSPECIFIED": 0,
		"CANCEL_REASON_USER":        1,
		"CANCEL_REASON_SYSTEM":      2,
		"CANCEL_REASON_AUTH_VOID":   3,
		"CANCEL_REASON_DUPLICATE":   4,
	}
)

func (x CancelReason) Enum() *CancelReason {
	p := new(CancelReason)
	*p = x
	return p
}

func (x CancelReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CancelReason) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_integration_event_v1_payment_events_proto_enumTypes[2].Descriptor()
}

func (CancelReason) Type() protoreflect.EnumType {
	return &file_domain_integration_event_v1_payment_events_proto_enumTypes[2]
}

func (x CancelReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CancelReason.Descriptor instead.
func (CancelReason) EnumDescriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{2}
}

// Canonical failure categories (provider-agnostic).
type FailureReason int32

const (
	FailureReason_FAILURE_REASON_UNSPECIFIED        FailureReason = 0
	FailureReason_FAILURE_REASON_DECLINED           FailureReason = 1
	FailureReason_FAILURE_REASON_INSUFFICIENT_FUNDS FailureReason = 2
	FailureReason_FAILURE_REASON_CARD_EXPIRED       FailureReason = 3
	FailureReason_FAILURE_REASON_INVALID_CVV        FailureReason = 4
	FailureReason_FAILURE_REASON_SCA_NOT_COMPLETED  FailureReason = 5
	FailureReason_FAILURE_REASON_FRAUD_SUSPECTED    FailureReason = 6
	FailureReason_FAILURE_REASON_NETWORK_ERROR      FailureReason = 7
	FailureReason_FAILURE_REASON_PROVIDER_ERROR     FailureReason = 8
)

// Enum value maps for FailureReason.
var (
	FailureReason_name = map[int32]string{
		0: "FAILURE_REASON_UNSPECIFIED",
		1: "FAILURE_REASON_DECLINED",
		2: "FAILURE_REASON_INSUFFICIENT_FUNDS",
		3: "FAILURE_REASON_CARD_EXPIRED",
		4: "FAILURE_REASON_INVALID_CVV",
		5: "FAILURE_REASON_SCA_NOT_COMPLETED",
		6: "FAILURE_REASON_FRAUD_SUSPECTED",
		7: "FAILURE_REASON_NETWORK_ERROR",
		8: "FAILURE_REASON_PROVIDER_ERROR",
	}
	FailureReason_value = map[string]int32{
		"FAILURE_REASON_UNSPECIFIED":        0,
		"FAILURE_REASON_DECLINED":           1,
		"FAILURE_REASON_INSUFFICIENT_FUNDS": 2,
		"FAILURE_REASON_CARD_EXPIRED":       3,
		"FAILURE_REASON_INVALID_CVV":        4,
		"FAILURE_REASON_SCA_NOT_COMPLETED":  5,
		"FAILURE_REASON_FRAUD_SUSPECTED":    6,
		"FAILURE_REASON_NETWORK_ERROR":      7,
		"FAILURE_REASON_PROVIDER_ERROR":     8,
	}
)

func (x FailureReason) Enum() *FailureReason {
	p := new(FailureReason)
	*p = x
	return p
}

func (x FailureReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FailureReason) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_integration_event_v1_payment_events_proto_enumTypes[3].Descriptor()
}

func (FailureReason) Type() protoreflect.EnumType {
	return &file_domain_integration_event_v1_payment_events_proto_enumTypes[3]
}

func (x FailureReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FailureReason.Descriptor instead.
func (FailureReason) EnumDescriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{3}
}

// -----------------------------------------------------------------------------
// Minimal metadata for idempotency and ordering across services.
// -----------------------------------------------------------------------------
type EventMeta struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique ID of this specific event (use for de-duplication).
	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"` // UUIDv7 — unique per event
	// Aggregate identifier (payment UUID). Also used as Kafka key.
	PaymentId string `protobuf:"bytes,2,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	// Link to Billing’s invoice. Stored as string to avoid tight coupling on UUID libs.
	InvoiceId string `protobuf:"bytes,3,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	// Aggregate version AFTER applying the event.
	// Combined with per-key partitioning this gives a total order per payment.
	Version       uint64 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventMeta) Reset() {
	*x = EventMeta{}
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMeta) ProtoMessage() {}

func (x *EventMeta) ProtoReflect() protoreflect.Message {
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMeta.ProtoReflect.Descriptor instead.
func (*EventMeta) Descriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{0}
}

func (x *EventMeta) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EventMeta) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *EventMeta) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *EventMeta) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// -> CREATED
// Initial aggregate creation. Carries business intent and capture strategy.
type PaymentCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        *money.Money           `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`                                                                            // total to charge
	Kind          PaymentKind            `protobuf:"varint,2,opt,name=kind,proto3,enum=domain.integration_event.v1.PaymentKind" json:"kind,omitempty"`                                  // one-time or subscription
	CaptureMode   CaptureMode            `protobuf:"varint,3,opt,name=capture_mode,json=captureMode,proto3,enum=domain.integration_event.v1.CaptureMode" json:"capture_mode,omitempty"` // immediate vs manual (hold)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentCreated) Reset() {
	*x = PaymentCreated{}
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentCreated) ProtoMessage() {}

func (x *PaymentCreated) ProtoReflect() protoreflect.Message {
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentCreated.ProtoReflect.Descriptor instead.
func (*PaymentCreated) Descriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{1}
}

func (x *PaymentCreated) GetAmount() *money.Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *PaymentCreated) GetKind() PaymentKind {
	if x != nil {
		return x.Kind
	}
	return PaymentKind_PAYMENT_KIND_UNSPECIFIED
}

func (x *PaymentCreated) GetCaptureMode() CaptureMode {
	if x != nil {
		return x.CaptureMode
	}
	return CaptureMode_CAPTURE_MODE_UNSPECIFIED
}

// -> WAITING_FOR_CONFIRMATION (optional step)
// Emitted only when SCA/3DS is required by the provider/rules.
type PaymentWaitingForConfirmation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentWaitingForConfirmation) Reset() {
	*x = PaymentWaitingForConfirmation{}
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentWaitingForConfirmation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentWaitingForConfirmation) ProtoMessage() {}

func (x *PaymentWaitingForConfirmation) ProtoReflect() protoreflect.Message {
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentWaitingForConfirmation.ProtoReflect.Descriptor instead.
func (*PaymentWaitingForConfirmation) Descriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{2}
}

// -> AUTHORIZED
// Authorization hold placed on customer’s payment method.
type PaymentAuthorized struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AuthorizedAmount *money.Money           `protobuf:"bytes,1,opt,name=authorized_amount,json=authorizedAmount,proto3" json:"authorized_amount,omitempty"` // hold amount
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PaymentAuthorized) Reset() {
	*x = PaymentAuthorized{}
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentAuthorized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentAuthorized) ProtoMessage() {}

func (x *PaymentAuthorized) ProtoReflect() protoreflect.Message {
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentAuthorized.ProtoReflect.Descriptor instead.
func (*PaymentAuthorized) Descriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{3}
}

func (x *PaymentAuthorized) GetAuthorizedAmount() *money.Money {
	if x != nil {
		return x.AuthorizedAmount
	}
	return nil
}

// -> PAID
// Funds captured; payment completed.
type PaymentPaid struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CapturedAmount *money.Money           `protobuf:"bytes,1,opt,name=captured_amount,json=capturedAmount,proto3" json:"captured_amount,omitempty"` // settled amount
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PaymentPaid) Reset() {
	*x = PaymentPaid{}
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentPaid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentPaid) ProtoMessage() {}

func (x *PaymentPaid) ProtoReflect() protoreflect.Message {
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentPaid.ProtoReflect.Descriptor instead.
func (*PaymentPaid) Descriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{4}
}

func (x *PaymentPaid) GetCapturedAmount() *money.Money {
	if x != nil {
		return x.CapturedAmount
	}
	return nil
}

// -> REFUNDED
// At least one refund succeeded (partial or full). Entered on first success.
type PaymentRefunded struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefundAmount  *money.Money           `protobuf:"bytes,1,opt,name=refund_amount,json=refundAmount,proto3" json:"refund_amount,omitempty"`    // this refund operation
	TotalRefunded *money.Money           `protobuf:"bytes,2,opt,name=total_refunded,json=totalRefunded,proto3" json:"total_refunded,omitempty"` // cumulative after this op
	Full          bool                   `protobuf:"varint,3,opt,name=full,proto3" json:"full,omitempty"`                                       // total_refunded == captured
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentRefunded) Reset() {
	*x = PaymentRefunded{}
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentRefunded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRefunded) ProtoMessage() {}

func (x *PaymentRefunded) ProtoReflect() protoreflect.Message {
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRefunded.ProtoReflect.Descriptor instead.
func (*PaymentRefunded) Descriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{5}
}

func (x *PaymentRefunded) GetRefundAmount() *money.Money {
	if x != nil {
		return x.RefundAmount
	}
	return nil
}

func (x *PaymentRefunded) GetTotalRefunded() *money.Money {
	if x != nil {
		return x.TotalRefunded
	}
	return nil
}

func (x *PaymentRefunded) GetFull() bool {
	if x != nil {
		return x.Full
	}
	return false
}

// (no state change, remains PAID)
// Refund attempt failed. Use FailureReason to categorize.
type PaymentRefundFailed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        FailureReason          `protobuf:"varint,1,opt,name=reason,proto3,enum=domain.integration_event.v1.FailureReason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentRefundFailed) Reset() {
	*x = PaymentRefundFailed{}
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentRefundFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRefundFailed) ProtoMessage() {}

func (x *PaymentRefundFailed) ProtoReflect() protoreflect.Message {
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRefundFailed.ProtoReflect.Descriptor instead.
func (*PaymentRefundFailed) Descriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{6}
}

func (x *PaymentRefundFailed) GetReason() FailureReason {
	if x != nil {
		return x.Reason
	}
	return FailureReason_FAILURE_REASON_UNSPECIFIED
}

// -> CANCELED
// Canceled by user/system; includes void of authorization.
type PaymentCanceled struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        CancelReason           `protobuf:"varint,1,opt,name=reason,proto3,enum=domain.integration_event.v1.CancelReason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentCanceled) Reset() {
	*x = PaymentCanceled{}
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentCanceled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentCanceled) ProtoMessage() {}

func (x *PaymentCanceled) ProtoReflect() protoreflect.Message {
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentCanceled.ProtoReflect.Descriptor instead.
func (*PaymentCanceled) Descriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{7}
}

func (x *PaymentCanceled) GetReason() CancelReason {
	if x != nil {
		return x.Reason
	}
	return CancelReason_CANCEL_REASON_UNSPECIFIED
}

// -> FAILED
// Declined, authorization reversed/expired, or other terminal error.
type PaymentFailed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        FailureReason          `protobuf:"varint,1,opt,name=reason,proto3,enum=domain.integration_event.v1.FailureReason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentFailed) Reset() {
	*x = PaymentFailed{}
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentFailed) ProtoMessage() {}

func (x *PaymentFailed) ProtoReflect() protoreflect.Message {
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentFailed.ProtoReflect.Descriptor instead.
func (*PaymentFailed) Descriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{8}
}

func (x *PaymentFailed) GetReason() FailureReason {
	if x != nil {
		return x.Reason
	}
	return FailureReason_FAILURE_REASON_UNSPECIFIED
}

// -----------------------------------------------------------------------------
// Single-topic wrapper: publish this message with key = payment_id.
// Consumers switch on the `oneof` to handle specific event types.
// -----------------------------------------------------------------------------
type PaymentEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Meta  *EventMeta             `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Types that are valid to be assigned to Event:
	//
	//	*PaymentEvent_Created
	//	*PaymentEvent_WaitingForConfirmation
	//	*PaymentEvent_Authorized
	//	*PaymentEvent_Paid
	//	*PaymentEvent_Refunded
	//	*PaymentEvent_RefundFailed
	//	*PaymentEvent_Canceled
	//	*PaymentEvent_Failed
	Event         isPaymentEvent_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentEvent) Reset() {
	*x = PaymentEvent{}
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentEvent) ProtoMessage() {}

func (x *PaymentEvent) ProtoReflect() protoreflect.Message {
	mi := &file_domain_integration_event_v1_payment_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentEvent.ProtoReflect.Descriptor instead.
func (*PaymentEvent) Descriptor() ([]byte, []int) {
	return file_domain_integration_event_v1_payment_events_proto_rawDescGZIP(), []int{9}
}

func (x *PaymentEvent) GetMeta() *EventMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *PaymentEvent) GetEvent() isPaymentEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *PaymentEvent) GetCreated() *PaymentCreated {
	if x != nil {
		if x, ok := x.Event.(*PaymentEvent_Created); ok {
			return x.Created
		}
	}
	return nil
}

func (x *PaymentEvent) GetWaitingForConfirmation() *PaymentWaitingForConfirmation {
	if x != nil {
		if x, ok := x.Event.(*PaymentEvent_WaitingForConfirmation); ok {
			return x.WaitingForConfirmation
		}
	}
	return nil
}

func (x *PaymentEvent) GetAuthorized() *PaymentAuthorized {
	if x != nil {
		if x, ok := x.Event.(*PaymentEvent_Authorized); ok {
			return x.Authorized
		}
	}
	return nil
}

func (x *PaymentEvent) GetPaid() *PaymentPaid {
	if x != nil {
		if x, ok := x.Event.(*PaymentEvent_Paid); ok {
			return x.Paid
		}
	}
	return nil
}

func (x *PaymentEvent) GetRefunded() *PaymentRefunded {
	if x != nil {
		if x, ok := x.Event.(*PaymentEvent_Refunded); ok {
			return x.Refunded
		}
	}
	return nil
}

func (x *PaymentEvent) GetRefundFailed() *PaymentRefundFailed {
	if x != nil {
		if x, ok := x.Event.(*PaymentEvent_RefundFailed); ok {
			return x.RefundFailed
		}
	}
	return nil
}

func (x *PaymentEvent) GetCanceled() *PaymentCanceled {
	if x != nil {
		if x, ok := x.Event.(*PaymentEvent_Canceled); ok {
			return x.Canceled
		}
	}
	return nil
}

func (x *PaymentEvent) GetFailed() *PaymentFailed {
	if x != nil {
		if x, ok := x.Event.(*PaymentEvent_Failed); ok {
			return x.Failed
		}
	}
	return nil
}

type isPaymentEvent_Event interface {
	isPaymentEvent_Event()
}

type PaymentEvent_Created struct {
	Created *PaymentCreated `protobuf:"bytes,10,opt,name=created,proto3,oneof"` // -> CREATED
}

type PaymentEvent_WaitingForConfirmation struct {
	WaitingForConfirmation *PaymentWaitingForConfirmation `protobuf:"bytes,11,opt,name=waiting_for_confirmation,json=waitingForConfirmation,proto3,oneof"` // -> WAITING_FOR_CONFIRMATION
}

type PaymentEvent_Authorized struct {
	Authorized *PaymentAuthorized `protobuf:"bytes,12,opt,name=authorized,proto3,oneof"` // -> AUTHORIZED
}

type PaymentEvent_Paid struct {
	Paid *PaymentPaid `protobuf:"bytes,13,opt,name=paid,proto3,oneof"` // -> PAID
}

type PaymentEvent_Refunded struct {
	Refunded *PaymentRefunded `protobuf:"bytes,14,opt,name=refunded,proto3,oneof"` // -> REFUNDED
}

type PaymentEvent_RefundFailed struct {
	RefundFailed *PaymentRefundFailed `protobuf:"bytes,15,opt,name=refund_failed,json=refundFailed,proto3,oneof"` // (no state change)
}

type PaymentEvent_Canceled struct {
	Canceled *PaymentCanceled `protobuf:"bytes,16,opt,name=canceled,proto3,oneof"` // -> CANCELED
}

type PaymentEvent_Failed struct {
	Failed *PaymentFailed `protobuf:"bytes,17,opt,name=failed,proto3,oneof"` // -> FAILED
}

func (*PaymentEvent_Created) isPaymentEvent_Event() {}

func (*PaymentEvent_WaitingForConfirmation) isPaymentEvent_Event() {}

func (*PaymentEvent_Authorized) isPaymentEvent_Event() {}

func (*PaymentEvent_Paid) isPaymentEvent_Event() {}

func (*PaymentEvent_Refunded) isPaymentEvent_Event() {}

func (*PaymentEvent_RefundFailed) isPaymentEvent_Event() {}

func (*PaymentEvent_Canceled) isPaymentEvent_Event() {}

func (*PaymentEvent_Failed) isPaymentEvent_Event() {}

var File_domain_integration_event_v1_payment_events_proto protoreflect.FileDescriptor

const file_domain_integration_event_v1_payment_events_proto_rawDesc = "" +
	"\n" +
	"0domain/integration_event/v1/payment_events.proto\x12\x1bdomain.integration_event.v1\x1a\x17google/type/money.proto\"~\n" +
	"\tEventMeta\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1d\n" +
	"\n" +
	"payment_id\x18\x02 \x01(\tR\tpaymentId\x12\x1d\n" +
	"\n" +
	"invoice_id\x18\x03 \x01(\tR\tinvoiceId\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x04R\aversion\"\xc7\x01\n" +
	"\x0ePaymentCreated\x12*\n" +
	"\x06amount\x18\x01 \x01(\v2\x12.google.type.MoneyR\x06amount\x12<\n" +
	"\x04kind\x18\x02 \x01(\x0e2(.domain.integration_event.v1.PaymentKindR\x04kind\x12K\n" +
	"\fcapture_mode\x18\x03 \x01(\x0e2(.domain.integration_event.v1.CaptureModeR\vcaptureMode\"\x1f\n" +
	"\x1dPaymentWaitingForConfirmation\"T\n" +
	"\x11PaymentAuthorized\x12?\n" +
	"\x11authorized_amount\x18\x01 \x01(\v2\x12.google.type.MoneyR\x10authorizedAmount\"J\n" +
	"\vPaymentPaid\x12;\n" +
	"\x0fcaptured_amount\x18\x01 \x01(\v2\x12.google.type.MoneyR\x0ecapturedAmount\"\x99\x01\n" +
	"\x0fPaymentRefunded\x127\n" +
	"\rrefund_amount\x18\x01 \x01(\v2\x12.google.type.MoneyR\frefundAmount\x129\n" +
	"\x0etotal_refunded\x18\x02 \x01(\v2\x12.google.type.MoneyR\rtotalRefunded\x12\x12\n" +
	"\x04full\x18\x03 \x01(\bR\x04full\"Y\n" +
	"\x13PaymentRefundFailed\x12B\n" +
	"\x06reason\x18\x01 \x01(\x0e2*.domain.integration_event.v1.FailureReasonR\x06reason\"T\n" +
	"\x0fPaymentCanceled\x12A\n" +
	"\x06reason\x18\x01 \x01(\x0e2).domain.integration_event.v1.CancelReasonR\x06reason\"S\n" +
	"\rPaymentFailed\x12B\n" +
	"\x06reason\x18\x01 \x01(\x0e2*.domain.integration_event.v1.FailureReasonR\x06reason\"\xdd\x05\n" +
	"\fPaymentEvent\x12:\n" +
	"\x04meta\x18\x01 \x01(\v2&.domain.integration_event.v1.EventMetaR\x04meta\x12G\n" +
	"\acreated\x18\n" +
	" \x01(\v2+.domain.integration_event.v1.PaymentCreatedH\x00R\acreated\x12v\n" +
	"\x18waiting_for_confirmation\x18\v \x01(\v2:.domain.integration_event.v1.PaymentWaitingForConfirmationH\x00R\x16waitingForConfirmation\x12P\n" +
	"\n" +
	"authorized\x18\f \x01(\v2..domain.integration_event.v1.PaymentAuthorizedH\x00R\n" +
	"authorized\x12>\n" +
	"\x04paid\x18\r \x01(\v2(.domain.integration_event.v1.PaymentPaidH\x00R\x04paid\x12J\n" +
	"\brefunded\x18\x0e \x01(\v2,.domain.integration_event.v1.PaymentRefundedH\x00R\brefunded\x12W\n" +
	"\rrefund_failed\x18\x0f \x01(\v20.domain.integration_event.v1.PaymentRefundFailedH\x00R\frefundFailed\x12J\n" +
	"\bcanceled\x18\x10 \x01(\v2,.domain.integration_event.v1.PaymentCanceledH\x00R\bcanceled\x12D\n" +
	"\x06failed\x18\x11 \x01(\v2*.domain.integration_event.v1.PaymentFailedH\x00R\x06failedB\a\n" +
	"\x05event*e\n" +
	"\vPaymentKind\x12\x1c\n" +
	"\x18PAYMENT_KIND_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15PAYMENT_KIND_ONE_TIME\x10\x01\x12\x1d\n" +
	"\x19PAYMENT_KIND_SUBSCRIPTION\x10\x02*`\n" +
	"\vCaptureMode\x12\x1c\n" +
	"\x18CAPTURE_MODE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16CAPTURE_MODE_IMMEDIATE\x10\x01\x12\x17\n" +
	"\x13CAPTURE_MODE_MANUAL\x10\x02*\x99\x01\n" +
	"\fCancelReason\x12\x1d\n" +
	"\x19CANCEL_REASON_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12CANCEL_REASON_USER\x10\x01\x12\x18\n" +
	"\x14CANCEL_REASON_SYSTEM\x10\x02\x12\x1b\n" +
	"\x17CANCEL_REASON_AUTH_VOID\x10\x03\x12\x1b\n" +
	"\x17CANCEL_REASON_DUPLICATE\x10\x04*\xc3\x02\n" +
	"\rFailureReason\x12\x1e\n" +
	"\x1aFAILURE_REASON_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17FAILURE_REASON_DECLINED\x10\x01\x12%\n" +
	"!FAILURE_REASON_INSUFFICIENT_FUNDS\x10\x02\x12\x1f\n" +
	"\x1bFAILURE_REASON_CARD_EXPIRED\x10\x03\x12\x1e\n" +
	"\x1aFAILURE_REASON_INVALID_CVV\x10\x04\x12$\n" +
	" FAILURE_REASON_SCA_NOT_COMPLETED\x10\x05\x12\"\n" +
	"\x1eFAILURE_REASON_FRAUD_SUSPECTED\x10\x06\x12 \n" +
	"\x1cFAILURE_REASON_NETWORK_ERROR\x10\a\x12!\n" +
	"\x1dFAILURE_REASON_PROVIDER_ERROR\x10\bB\x92\x02\n" +
	"\x1fcom.domain.integration_event.v1B\x12PaymentEventsProtoP\x01ZQgithub.com/shortlink-org/billing/payments/integration_event/v1;integrationeventv1\xa2\x02\x03DIX\xaa\x02\x1aDomain.IntegrationEvent.V1\xca\x02\x1aDomain\\IntegrationEvent\\V1\xe2\x02&Domain\\IntegrationEvent\\V1\\GPBMetadata\xea\x02\x1cDomain::IntegrationEvent::V1b\x06proto3"

var (
	file_domain_integration_event_v1_payment_events_proto_rawDescOnce sync.Once
	file_domain_integration_event_v1_payment_events_proto_rawDescData []byte
)

func file_domain_integration_event_v1_payment_events_proto_rawDescGZIP() []byte {
	file_domain_integration_event_v1_payment_events_proto_rawDescOnce.Do(func() {
		file_domain_integration_event_v1_payment_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_domain_integration_event_v1_payment_events_proto_rawDesc), len(file_domain_integration_event_v1_payment_events_proto_rawDesc)))
	})
	return file_domain_integration_event_v1_payment_events_proto_rawDescData
}

var file_domain_integration_event_v1_payment_events_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_domain_integration_event_v1_payment_events_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_domain_integration_event_v1_payment_events_proto_goTypes = []any{
	(PaymentKind)(0),                      // 0: domain.integration_event.v1.PaymentKind
	(CaptureMode)(0),                      // 1: domain.integration_event.v1.CaptureMode
	(CancelReason)(0),                     // 2: domain.integration_event.v1.CancelReason
	(FailureReason)(0),                    // 3: domain.integration_event.v1.FailureReason
	(*EventMeta)(nil),                     // 4: domain.integration_event.v1.EventMeta
	(*PaymentCreated)(nil),                // 5: domain.integration_event.v1.PaymentCreated
	(*PaymentWaitingForConfirmation)(nil), // 6: domain.integration_event.v1.PaymentWaitingForConfirmation
	(*PaymentAuthorized)(nil),             // 7: domain.integration_event.v1.PaymentAuthorized
	(*PaymentPaid)(nil),                   // 8: domain.integration_event.v1.PaymentPaid
	(*PaymentRefunded)(nil),               // 9: domain.integration_event.v1.PaymentRefunded
	(*PaymentRefundFailed)(nil),           // 10: domain.integration_event.v1.PaymentRefundFailed
	(*PaymentCanceled)(nil),               // 11: domain.integration_event.v1.PaymentCanceled
	(*PaymentFailed)(nil),                 // 12: domain.integration_event.v1.PaymentFailed
	(*PaymentEvent)(nil),                  // 13: domain.integration_event.v1.PaymentEvent
	(*money.Money)(nil),                   // 14: google.type.Money
}
var file_domain_integration_event_v1_payment_events_proto_depIdxs = []int32{
	14, // 0: domain.integration_event.v1.PaymentCreated.amount:type_name -> google.type.Money
	0,  // 1: domain.integration_event.v1.PaymentCreated.kind:type_name -> domain.integration_event.v1.PaymentKind
	1,  // 2: domain.integration_event.v1.PaymentCreated.capture_mode:type_name -> domain.integration_event.v1.CaptureMode
	14, // 3: domain.integration_event.v1.PaymentAuthorized.authorized_amount:type_name -> google.type.Money
	14, // 4: domain.integration_event.v1.PaymentPaid.captured_amount:type_name -> google.type.Money
	14, // 5: domain.integration_event.v1.PaymentRefunded.refund_amount:type_name -> google.type.Money
	14, // 6: domain.integration_event.v1.PaymentRefunded.total_refunded:type_name -> google.type.Money
	3,  // 7: domain.integration_event.v1.PaymentRefundFailed.reason:type_name -> domain.integration_event.v1.FailureReason
	2,  // 8: domain.integration_event.v1.PaymentCanceled.reason:type_name -> domain.integration_event.v1.CancelReason
	3,  // 9: domain.integration_event.v1.PaymentFailed.reason:type_name -> domain.integration_event.v1.FailureReason
	4,  // 10: domain.integration_event.v1.PaymentEvent.meta:type_name -> domain.integration_event.v1.EventMeta
	5,  // 11: domain.integration_event.v1.PaymentEvent.created:type_name -> domain.integration_event.v1.PaymentCreated
	6,  // 12: domain.integration_event.v1.PaymentEvent.waiting_for_confirmation:type_name -> domain.integration_event.v1.PaymentWaitingForConfirmation
	7,  // 13: domain.integration_event.v1.PaymentEvent.authorized:type_name -> domain.integration_event.v1.PaymentAuthorized
	8,  // 14: domain.integration_event.v1.PaymentEvent.paid:type_name -> domain.integration_event.v1.PaymentPaid
	9,  // 15: domain.integration_event.v1.PaymentEvent.refunded:type_name -> domain.integration_event.v1.PaymentRefunded
	10, // 16: domain.integration_event.v1.PaymentEvent.refund_failed:type_name -> domain.integration_event.v1.PaymentRefundFailed
	11, // 17: domain.integration_event.v1.PaymentEvent.canceled:type_name -> domain.integration_event.v1.PaymentCanceled
	12, // 18: domain.integration_event.v1.PaymentEvent.failed:type_name -> domain.integration_event.v1.PaymentFailed
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_domain_integration_event_v1_payment_events_proto_init() }
func file_domain_integration_event_v1_payment_events_proto_init() {
	if File_domain_integration_event_v1_payment_events_proto != nil {
		return
	}
	file_domain_integration_event_v1_payment_events_proto_msgTypes[9].OneofWrappers = []any{
		(*PaymentEvent_Created)(nil),
		(*PaymentEvent_WaitingForConfirmation)(nil),
		(*PaymentEvent_Authorized)(nil),
		(*PaymentEvent_Paid)(nil),
		(*PaymentEvent_Refunded)(nil),
		(*PaymentEvent_RefundFailed)(nil),
		(*PaymentEvent_Canceled)(nil),
		(*PaymentEvent_Failed)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_domain_integration_event_v1_payment_events_proto_rawDesc), len(file_domain_integration_event_v1_payment_events_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_domain_integration_event_v1_payment_events_proto_goTypes,
		DependencyIndexes: file_domain_integration_event_v1_payment_events_proto_depIdxs,
		EnumInfos:         file_domain_integration_event_v1_payment_events_proto_enumTypes,
		MessageInfos:      file_domain_integration_event_v1_payment_events_proto_msgTypes,
	}.Build()
	File_domain_integration_event_v1_payment_events_proto = out.File
	file_domain_integration_event_v1_payment_events_proto_goTypes = nil
	file_domain_integration_event_v1_payment_events_proto_depIdxs = nil
}
