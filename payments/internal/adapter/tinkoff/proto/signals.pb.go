// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: adapter/tinkoff/proto/signals.proto

package investapi

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Тип стратегии.
type StrategyType int32

const (
	StrategyType_STRATEGY_TYPE_UNSPECIFIED StrategyType = 0 //Не определен.
	StrategyType_STRATEGY_TYPE_TECHNICAL   StrategyType = 1 //Техническая стратегия.
	StrategyType_STRATEGY_TYPE_FUNDAMENTAL StrategyType = 2 //Фундаментальная стратегия.
)

// Enum value maps for StrategyType.
var (
	StrategyType_name = map[int32]string{
		0: "STRATEGY_TYPE_UNSPECIFIED",
		1: "STRATEGY_TYPE_TECHNICAL",
		2: "STRATEGY_TYPE_FUNDAMENTAL",
	}
	StrategyType_value = map[string]int32{
		"STRATEGY_TYPE_UNSPECIFIED": 0,
		"STRATEGY_TYPE_TECHNICAL":   1,
		"STRATEGY_TYPE_FUNDAMENTAL": 2,
	}
)

func (x StrategyType) Enum() *StrategyType {
	p := new(StrategyType)
	*p = x
	return p
}

func (x StrategyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StrategyType) Descriptor() protoreflect.EnumDescriptor {
	return file_adapter_tinkoff_proto_signals_proto_enumTypes[0].Descriptor()
}

func (StrategyType) Type() protoreflect.EnumType {
	return &file_adapter_tinkoff_proto_signals_proto_enumTypes[0]
}

func (x StrategyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StrategyType.Descriptor instead.
func (StrategyType) EnumDescriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_signals_proto_rawDescGZIP(), []int{0}
}

// Направление сигнала.
type SignalDirection int32

const (
	SignalDirection_SIGNAL_DIRECTION_UNSPECIFIED SignalDirection = 0 //Не определен.
	SignalDirection_SIGNAL_DIRECTION_BUY         SignalDirection = 1 //Покупка.
	SignalDirection_SIGNAL_DIRECTION_SELL        SignalDirection = 2 //Продажа.
)

// Enum value maps for SignalDirection.
var (
	SignalDirection_name = map[int32]string{
		0: "SIGNAL_DIRECTION_UNSPECIFIED",
		1: "SIGNAL_DIRECTION_BUY",
		2: "SIGNAL_DIRECTION_SELL",
	}
	SignalDirection_value = map[string]int32{
		"SIGNAL_DIRECTION_UNSPECIFIED": 0,
		"SIGNAL_DIRECTION_BUY":         1,
		"SIGNAL_DIRECTION_SELL":        2,
	}
)

func (x SignalDirection) Enum() *SignalDirection {
	p := new(SignalDirection)
	*p = x
	return p
}

func (x SignalDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_adapter_tinkoff_proto_signals_proto_enumTypes[1].Descriptor()
}

func (SignalDirection) Type() protoreflect.EnumType {
	return &file_adapter_tinkoff_proto_signals_proto_enumTypes[1]
}

func (x SignalDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalDirection.Descriptor instead.
func (SignalDirection) EnumDescriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_signals_proto_rawDescGZIP(), []int{1}
}

// Статус сигнала.
type SignalState int32

const (
	SignalState_SIGNAL_STATE_UNSPECIFIED SignalState = 0 //Не определен.
	SignalState_SIGNAL_STATE_ACTIVE      SignalState = 1 //Активный сигнал.
	SignalState_SIGNAL_STATE_CLOSED      SignalState = 2 //Закрытый сигнал.
	SignalState_SIGNAL_STATE_ALL         SignalState = 3 //Все состояния.
)

// Enum value maps for SignalState.
var (
	SignalState_name = map[int32]string{
		0: "SIGNAL_STATE_UNSPECIFIED",
		1: "SIGNAL_STATE_ACTIVE",
		2: "SIGNAL_STATE_CLOSED",
		3: "SIGNAL_STATE_ALL",
	}
	SignalState_value = map[string]int32{
		"SIGNAL_STATE_UNSPECIFIED": 0,
		"SIGNAL_STATE_ACTIVE":      1,
		"SIGNAL_STATE_CLOSED":      2,
		"SIGNAL_STATE_ALL":         3,
	}
)

func (x SignalState) Enum() *SignalState {
	p := new(SignalState)
	*p = x
	return p
}

func (x SignalState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalState) Descriptor() protoreflect.EnumDescriptor {
	return file_adapter_tinkoff_proto_signals_proto_enumTypes[2].Descriptor()
}

func (SignalState) Type() protoreflect.EnumType {
	return &file_adapter_tinkoff_proto_signals_proto_enumTypes[2]
}

func (x SignalState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalState.Descriptor instead.
func (SignalState) EnumDescriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_signals_proto_rawDescGZIP(), []int{2}
}

// Запрос стратегий.
type GetStrategiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StrategyId    *string                `protobuf:"bytes,1,opt,name=strategy_id,json=strategyId,proto3,oneof" json:"strategy_id,omitempty"` //Идентификатор стратегии.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStrategiesRequest) Reset() {
	*x = GetStrategiesRequest{}
	mi := &file_adapter_tinkoff_proto_signals_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStrategiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStrategiesRequest) ProtoMessage() {}

func (x *GetStrategiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_signals_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStrategiesRequest.ProtoReflect.Descriptor instead.
func (*GetStrategiesRequest) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_signals_proto_rawDescGZIP(), []int{0}
}

func (x *GetStrategiesRequest) GetStrategyId() string {
	if x != nil && x.StrategyId != nil {
		return *x.StrategyId
	}
	return ""
}

// Стратегии
type GetStrategiesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Strategies    []*Strategy            `protobuf:"bytes,1,rep,name=strategies,proto3" json:"strategies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStrategiesResponse) Reset() {
	*x = GetStrategiesResponse{}
	mi := &file_adapter_tinkoff_proto_signals_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStrategiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStrategiesResponse) ProtoMessage() {}

func (x *GetStrategiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_signals_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStrategiesResponse.ProtoReflect.Descriptor instead.
func (*GetStrategiesResponse) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_signals_proto_rawDescGZIP(), []int{1}
}

func (x *GetStrategiesResponse) GetStrategies() []*Strategy {
	if x != nil {
		return x.Strategies
	}
	return nil
}

// Стратегия
type Strategy struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	StrategyId             string                 `protobuf:"bytes,1,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`                                                                //Идентификатор стратегии.
	StrategyName           string                 `protobuf:"bytes,2,opt,name=strategy_name,json=strategyName,proto3" json:"strategy_name,omitempty"`                                                          //Название стратегии.
	StrategyDescription    *string                `protobuf:"bytes,3,opt,name=strategy_description,json=strategyDescription,proto3,oneof" json:"strategy_description,omitempty"`                               //Описание стратегии.
	StrategyUrl            *string                `protobuf:"bytes,4,opt,name=strategy_url,json=strategyUrl,proto3,oneof" json:"strategy_url,omitempty"`                                                       //Ссылка на страницу с описанием стратегии.
	StrategyType           StrategyType           `protobuf:"varint,5,opt,name=strategy_type,json=strategyType,proto3,enum=tinkoff.public.invest.api.contract.v1.StrategyType" json:"strategy_type,omitempty"` //Тип стратегии.
	ActiveSignals          int32                  `protobuf:"varint,6,opt,name=active_signals,json=activeSignals,proto3" json:"active_signals,omitempty"`                                                      //Количество активных сигналов.
	TotalSignals           int32                  `protobuf:"varint,7,opt,name=total_signals,json=totalSignals,proto3" json:"total_signals,omitempty"`                                                         //Общее количество сигналов.
	TimeInPosition         int64                  `protobuf:"varint,8,opt,name=time_in_position,json=timeInPosition,proto3" json:"time_in_position,omitempty"`                                                 //Среднее время нахождения сигнала в позиции.
	AverageSignalYield     *Quotation             `protobuf:"bytes,9,opt,name=average_signal_yield,json=averageSignalYield,proto3" json:"average_signal_yield,omitempty"`                                      //Средняя доходность сигнала в стратегии.
	AverageSignalYieldYear *Quotation             `protobuf:"bytes,10,opt,name=average_signal_yield_year,json=averageSignalYieldYear,proto3" json:"average_signal_yield_year,omitempty"`                       //Средняя доходность сигналов в стратегии за последний год.
	Yield                  *Quotation             `protobuf:"bytes,11,opt,name=yield,proto3" json:"yield,omitempty"`                                                                                           //Доходность стратегии.
	YieldYear              *Quotation             `protobuf:"bytes,12,opt,name=yield_year,json=yieldYear,proto3" json:"yield_year,omitempty"`                                                                  //Доходность стратегии за последний год.
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Strategy) Reset() {
	*x = Strategy{}
	mi := &file_adapter_tinkoff_proto_signals_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Strategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strategy) ProtoMessage() {}

func (x *Strategy) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_signals_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strategy.ProtoReflect.Descriptor instead.
func (*Strategy) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_signals_proto_rawDescGZIP(), []int{2}
}

func (x *Strategy) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *Strategy) GetStrategyName() string {
	if x != nil {
		return x.StrategyName
	}
	return ""
}

func (x *Strategy) GetStrategyDescription() string {
	if x != nil && x.StrategyDescription != nil {
		return *x.StrategyDescription
	}
	return ""
}

func (x *Strategy) GetStrategyUrl() string {
	if x != nil && x.StrategyUrl != nil {
		return *x.StrategyUrl
	}
	return ""
}

func (x *Strategy) GetStrategyType() StrategyType {
	if x != nil {
		return x.StrategyType
	}
	return StrategyType_STRATEGY_TYPE_UNSPECIFIED
}

func (x *Strategy) GetActiveSignals() int32 {
	if x != nil {
		return x.ActiveSignals
	}
	return 0
}

func (x *Strategy) GetTotalSignals() int32 {
	if x != nil {
		return x.TotalSignals
	}
	return 0
}

func (x *Strategy) GetTimeInPosition() int64 {
	if x != nil {
		return x.TimeInPosition
	}
	return 0
}

func (x *Strategy) GetAverageSignalYield() *Quotation {
	if x != nil {
		return x.AverageSignalYield
	}
	return nil
}

func (x *Strategy) GetAverageSignalYieldYear() *Quotation {
	if x != nil {
		return x.AverageSignalYieldYear
	}
	return nil
}

func (x *Strategy) GetYield() *Quotation {
	if x != nil {
		return x.Yield
	}
	return nil
}

func (x *Strategy) GetYieldYear() *Quotation {
	if x != nil {
		return x.YieldYear
	}
	return nil
}

// Запрос сигналов.
type GetSignalsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignalId      *string                `protobuf:"bytes,1,opt,name=signal_id,json=signalId,proto3,oneof" json:"signal_id,omitempty"`                                                                      //Идентификатор сигнала.
	StrategyId    *string                `protobuf:"bytes,2,opt,name=strategy_id,json=strategyId,proto3,oneof" json:"strategy_id,omitempty"`                                                                //Идентификатор стратегии.
	StrategyType  *StrategyType          `protobuf:"varint,3,opt,name=strategy_type,json=strategyType,proto3,enum=tinkoff.public.invest.api.contract.v1.StrategyType,oneof" json:"strategy_type,omitempty"` //Тип стратегии.
	InstrumentUid *string                `protobuf:"bytes,4,opt,name=instrument_uid,json=instrumentUid,proto3,oneof" json:"instrument_uid,omitempty"`                                                       //	Идентификатор бумаги.
	From          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=from,proto3,oneof" json:"from,omitempty"`                                                                                              //	Дата начала запрашиваемого интервала по UTC.
	To            *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=to,proto3,oneof" json:"to,omitempty"`                                                                                                  //	Дата конца запрашиваемого интервала по UTC.
	Direction     *SignalDirection       `protobuf:"varint,7,opt,name=direction,proto3,enum=tinkoff.public.invest.api.contract.v1.SignalDirection,oneof" json:"direction,omitempty"`                        //	Направление сигнала.
	Active        *SignalState           `protobuf:"varint,8,opt,name=active,proto3,enum=tinkoff.public.invest.api.contract.v1.SignalState,oneof" json:"active,omitempty"`                                  //Состояние сигнала.
	Paging        *Page                  `protobuf:"bytes,9,opt,name=paging,proto3,oneof" json:"paging,omitempty"`                                                                                          //Настройки пагинации.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSignalsRequest) Reset() {
	*x = GetSignalsRequest{}
	mi := &file_adapter_tinkoff_proto_signals_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSignalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignalsRequest) ProtoMessage() {}

func (x *GetSignalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_signals_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignalsRequest.ProtoReflect.Descriptor instead.
func (*GetSignalsRequest) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_signals_proto_rawDescGZIP(), []int{3}
}

func (x *GetSignalsRequest) GetSignalId() string {
	if x != nil && x.SignalId != nil {
		return *x.SignalId
	}
	return ""
}

func (x *GetSignalsRequest) GetStrategyId() string {
	if x != nil && x.StrategyId != nil {
		return *x.StrategyId
	}
	return ""
}

func (x *GetSignalsRequest) GetStrategyType() StrategyType {
	if x != nil && x.StrategyType != nil {
		return *x.StrategyType
	}
	return StrategyType_STRATEGY_TYPE_UNSPECIFIED
}

func (x *GetSignalsRequest) GetInstrumentUid() string {
	if x != nil && x.InstrumentUid != nil {
		return *x.InstrumentUid
	}
	return ""
}

func (x *GetSignalsRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetSignalsRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *GetSignalsRequest) GetDirection() SignalDirection {
	if x != nil && x.Direction != nil {
		return *x.Direction
	}
	return SignalDirection_SIGNAL_DIRECTION_UNSPECIFIED
}

func (x *GetSignalsRequest) GetActive() SignalState {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return SignalState_SIGNAL_STATE_UNSPECIFIED
}

func (x *GetSignalsRequest) GetPaging() *Page {
	if x != nil {
		return x.Paging
	}
	return nil
}

// Сигналы.
type GetSignalsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signals       []*Signal              `protobuf:"bytes,1,rep,name=signals,proto3" json:"signals,omitempty"` //Массив сигналов.
	Paging        *PageResponse          `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`   //Данные по пагинации.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSignalsResponse) Reset() {
	*x = GetSignalsResponse{}
	mi := &file_adapter_tinkoff_proto_signals_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSignalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignalsResponse) ProtoMessage() {}

func (x *GetSignalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_signals_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignalsResponse.ProtoReflect.Descriptor instead.
func (*GetSignalsResponse) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_signals_proto_rawDescGZIP(), []int{4}
}

func (x *GetSignalsResponse) GetSignals() []*Signal {
	if x != nil {
		return x.Signals
	}
	return nil
}

func (x *GetSignalsResponse) GetPaging() *PageResponse {
	if x != nil {
		return x.Paging
	}
	return nil
}

// Сигнал.
type Signal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignalId      string                 `protobuf:"bytes,1,opt,name=signal_id,json=signalId,proto3" json:"signal_id,omitempty"`                                               //Идентификатор сигнала.
	StrategyId    string                 `protobuf:"bytes,2,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`                                         //Идентификатор стратегии.
	StrategyName  string                 `protobuf:"bytes,3,opt,name=strategy_name,json=strategyName,proto3" json:"strategy_name,omitempty"`                                   //Название стратегии.
	InstrumentUid string                 `protobuf:"bytes,4,opt,name=instrument_uid,json=instrumentUid,proto3" json:"instrument_uid,omitempty"`                                //Идентификатор бумаги.
	CreateDt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_dt,json=createDt,proto3" json:"create_dt,omitempty"`                                               //Дата и время создания сигнала по UTC.
	Direction     SignalDirection        `protobuf:"varint,6,opt,name=direction,proto3,enum=tinkoff.public.invest.api.contract.v1.SignalDirection" json:"direction,omitempty"` //Направление сигнала.
	InitialPrice  *Quotation             `protobuf:"bytes,7,opt,name=initial_price,json=initialPrice,proto3" json:"initial_price,omitempty"`                                   //Цена бумаги на момент формирования сигнала.
	Info          *string                `protobuf:"bytes,8,opt,name=info,proto3,oneof" json:"info,omitempty"`                                                                 //Дополнительная информация о сигнале.
	Name          string                 `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`                                                                       //Название сигнала.
	TargetPrice   *Quotation             `protobuf:"bytes,10,opt,name=target_price,json=targetPrice,proto3" json:"target_price,omitempty"`                                     //Целевая цена.
	EndDt         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=end_dt,json=endDt,proto3" json:"end_dt,omitempty"`                                                       //Дата и время дедлайна сигнала по UTC.
	Probability   *int32                 `protobuf:"varint,12,opt,name=probability,proto3,oneof" json:"probability,omitempty"`                                                 //Вероятность сигнала.
	Stoploss      *Quotation             `protobuf:"bytes,13,opt,name=stoploss,proto3,oneof" json:"stoploss,omitempty"`                                                        //Порог закрытия сигнала по стоплосс.
	ClosePrice    *Quotation             `protobuf:"bytes,14,opt,name=close_price,json=closePrice,proto3,oneof" json:"close_price,omitempty"`                                  //Цена закрытия сигнала.
	CloseDt       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=close_dt,json=closeDt,proto3,oneof" json:"close_dt,omitempty"`                                           //Дата и время закрытия сигнала по UTC.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Signal) Reset() {
	*x = Signal{}
	mi := &file_adapter_tinkoff_proto_signals_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signal) ProtoMessage() {}

func (x *Signal) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_signals_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signal.ProtoReflect.Descriptor instead.
func (*Signal) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_signals_proto_rawDescGZIP(), []int{5}
}

func (x *Signal) GetSignalId() string {
	if x != nil {
		return x.SignalId
	}
	return ""
}

func (x *Signal) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *Signal) GetStrategyName() string {
	if x != nil {
		return x.StrategyName
	}
	return ""
}

func (x *Signal) GetInstrumentUid() string {
	if x != nil {
		return x.InstrumentUid
	}
	return ""
}

func (x *Signal) GetCreateDt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateDt
	}
	return nil
}

func (x *Signal) GetDirection() SignalDirection {
	if x != nil {
		return x.Direction
	}
	return SignalDirection_SIGNAL_DIRECTION_UNSPECIFIED
}

func (x *Signal) GetInitialPrice() *Quotation {
	if x != nil {
		return x.InitialPrice
	}
	return nil
}

func (x *Signal) GetInfo() string {
	if x != nil && x.Info != nil {
		return *x.Info
	}
	return ""
}

func (x *Signal) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Signal) GetTargetPrice() *Quotation {
	if x != nil {
		return x.TargetPrice
	}
	return nil
}

func (x *Signal) GetEndDt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDt
	}
	return nil
}

func (x *Signal) GetProbability() int32 {
	if x != nil && x.Probability != nil {
		return *x.Probability
	}
	return 0
}

func (x *Signal) GetStoploss() *Quotation {
	if x != nil {
		return x.Stoploss
	}
	return nil
}

func (x *Signal) GetClosePrice() *Quotation {
	if x != nil {
		return x.ClosePrice
	}
	return nil
}

func (x *Signal) GetCloseDt() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseDt
	}
	return nil
}

var File_adapter_tinkoff_proto_signals_proto protoreflect.FileDescriptor

const file_adapter_tinkoff_proto_signals_proto_rawDesc = "" +
	"\n" +
	"#adapter/tinkoff/proto/signals.proto\x12%tinkoff.public.invest.api.contract.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\"adapter/tinkoff/proto/common.proto\"L\n" +
	"\x14GetStrategiesRequest\x12$\n" +
	"\vstrategy_id\x18\x01 \x01(\tH\x00R\n" +
	"strategyId\x88\x01\x01B\x0e\n" +
	"\f_strategy_id\"h\n" +
	"\x15GetStrategiesResponse\x12O\n" +
	"\n" +
	"strategies\x18\x01 \x03(\v2/.tinkoff.public.invest.api.contract.v1.StrategyR\n" +
	"strategies\"\xc6\x06\n" +
	"\bStrategy\x12$\n" +
	"\vstrategy_id\x18\x01 \x01(\tB\x03\xe0A\x02R\n" +
	"strategyId\x12(\n" +
	"\rstrategy_name\x18\x02 \x01(\tB\x03\xe0A\x02R\fstrategyName\x126\n" +
	"\x14strategy_description\x18\x03 \x01(\tH\x00R\x13strategyDescription\x88\x01\x01\x12&\n" +
	"\fstrategy_url\x18\x04 \x01(\tH\x01R\vstrategyUrl\x88\x01\x01\x12]\n" +
	"\rstrategy_type\x18\x05 \x01(\x0e23.tinkoff.public.invest.api.contract.v1.StrategyTypeB\x03\xe0A\x02R\fstrategyType\x12*\n" +
	"\x0eactive_signals\x18\x06 \x01(\x05B\x03\xe0A\x02R\ractiveSignals\x12(\n" +
	"\rtotal_signals\x18\a \x01(\x05B\x03\xe0A\x02R\ftotalSignals\x12-\n" +
	"\x10time_in_position\x18\b \x01(\x03B\x03\xe0A\x02R\x0etimeInPosition\x12g\n" +
	"\x14average_signal_yield\x18\t \x01(\v20.tinkoff.public.invest.api.contract.v1.QuotationB\x03\xe0A\x02R\x12averageSignalYield\x12p\n" +
	"\x19average_signal_yield_year\x18\n" +
	" \x01(\v20.tinkoff.public.invest.api.contract.v1.QuotationB\x03\xe0A\x02R\x16averageSignalYieldYear\x12K\n" +
	"\x05yield\x18\v \x01(\v20.tinkoff.public.invest.api.contract.v1.QuotationB\x03\xe0A\x02R\x05yield\x12T\n" +
	"\n" +
	"yield_year\x18\f \x01(\v20.tinkoff.public.invest.api.contract.v1.QuotationB\x03\xe0A\x02R\tyieldYearB\x17\n" +
	"\x15_strategy_descriptionB\x0f\n" +
	"\r_strategy_url\"\xb9\x05\n" +
	"\x11GetSignalsRequest\x12 \n" +
	"\tsignal_id\x18\x01 \x01(\tH\x00R\bsignalId\x88\x01\x01\x12$\n" +
	"\vstrategy_id\x18\x02 \x01(\tH\x01R\n" +
	"strategyId\x88\x01\x01\x12]\n" +
	"\rstrategy_type\x18\x03 \x01(\x0e23.tinkoff.public.invest.api.contract.v1.StrategyTypeH\x02R\fstrategyType\x88\x01\x01\x12*\n" +
	"\x0einstrument_uid\x18\x04 \x01(\tH\x03R\rinstrumentUid\x88\x01\x01\x123\n" +
	"\x04from\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampH\x04R\x04from\x88\x01\x01\x12/\n" +
	"\x02to\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x05R\x02to\x88\x01\x01\x12Y\n" +
	"\tdirection\x18\a \x01(\x0e26.tinkoff.public.invest.api.contract.v1.SignalDirectionH\x06R\tdirection\x88\x01\x01\x12O\n" +
	"\x06active\x18\b \x01(\x0e22.tinkoff.public.invest.api.contract.v1.SignalStateH\aR\x06active\x88\x01\x01\x12H\n" +
	"\x06paging\x18\t \x01(\v2+.tinkoff.public.invest.api.contract.v1.PageH\bR\x06paging\x88\x01\x01B\f\n" +
	"\n" +
	"_signal_idB\x0e\n" +
	"\f_strategy_idB\x10\n" +
	"\x0e_strategy_typeB\x11\n" +
	"\x0f_instrument_uidB\a\n" +
	"\x05_fromB\x05\n" +
	"\x03_toB\f\n" +
	"\n" +
	"_directionB\t\n" +
	"\a_activeB\t\n" +
	"\a_paging\"\xaa\x01\n" +
	"\x12GetSignalsResponse\x12G\n" +
	"\asignals\x18\x01 \x03(\v2-.tinkoff.public.invest.api.contract.v1.SignalR\asignals\x12K\n" +
	"\x06paging\x18\x02 \x01(\v23.tinkoff.public.invest.api.contract.v1.PageResponseR\x06paging\"\xb0\a\n" +
	"\x06Signal\x12 \n" +
	"\tsignal_id\x18\x01 \x01(\tB\x03\xe0A\x02R\bsignalId\x12$\n" +
	"\vstrategy_id\x18\x02 \x01(\tB\x03\xe0A\x02R\n" +
	"strategyId\x12(\n" +
	"\rstrategy_name\x18\x03 \x01(\tB\x03\xe0A\x02R\fstrategyName\x12*\n" +
	"\x0einstrument_uid\x18\x04 \x01(\tB\x03\xe0A\x02R\rinstrumentUid\x12<\n" +
	"\tcreate_dt\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x02R\bcreateDt\x12Y\n" +
	"\tdirection\x18\x06 \x01(\x0e26.tinkoff.public.invest.api.contract.v1.SignalDirectionB\x03\xe0A\x02R\tdirection\x12Z\n" +
	"\rinitial_price\x18\a \x01(\v20.tinkoff.public.invest.api.contract.v1.QuotationB\x03\xe0A\x02R\finitialPrice\x12\x17\n" +
	"\x04info\x18\b \x01(\tH\x00R\x04info\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\t \x01(\tB\x03\xe0A\x02R\x04name\x12X\n" +
	"\ftarget_price\x18\n" +
	" \x01(\v20.tinkoff.public.invest.api.contract.v1.QuotationB\x03\xe0A\x02R\vtargetPrice\x126\n" +
	"\x06end_dt\x18\v \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x02R\x05endDt\x12%\n" +
	"\vprobability\x18\f \x01(\x05H\x01R\vprobability\x88\x01\x01\x12Q\n" +
	"\bstoploss\x18\r \x01(\v20.tinkoff.public.invest.api.contract.v1.QuotationH\x02R\bstoploss\x88\x01\x01\x12V\n" +
	"\vclose_price\x18\x0e \x01(\v20.tinkoff.public.invest.api.contract.v1.QuotationH\x03R\n" +
	"closePrice\x88\x01\x01\x12:\n" +
	"\bclose_dt\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampH\x04R\acloseDt\x88\x01\x01B\a\n" +
	"\x05_infoB\x0e\n" +
	"\f_probabilityB\v\n" +
	"\t_stoplossB\x0e\n" +
	"\f_close_priceB\v\n" +
	"\t_close_dt*i\n" +
	"\fStrategyType\x12\x1d\n" +
	"\x19STRATEGY_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17STRATEGY_TYPE_TECHNICAL\x10\x01\x12\x1d\n" +
	"\x19STRATEGY_TYPE_FUNDAMENTAL\x10\x02*h\n" +
	"\x0fSignalDirection\x12 \n" +
	"\x1cSIGNAL_DIRECTION_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14SIGNAL_DIRECTION_BUY\x10\x01\x12\x19\n" +
	"\x15SIGNAL_DIRECTION_SELL\x10\x02*s\n" +
	"\vSignalState\x12\x1c\n" +
	"\x18SIGNAL_STATE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13SIGNAL_STATE_ACTIVE\x10\x01\x12\x17\n" +
	"\x13SIGNAL_STATE_CLOSED\x10\x02\x12\x14\n" +
	"\x10SIGNAL_STATE_ALL\x10\x032\xa0\x02\n" +
	"\rSignalService\x12\x8a\x01\n" +
	"\rGetStrategies\x12;.tinkoff.public.invest.api.contract.v1.GetStrategiesRequest\x1a<.tinkoff.public.invest.api.contract.v1.GetStrategiesResponse\x12\x81\x01\n" +
	"\n" +
	"GetSignals\x128.tinkoff.public.invest.api.contract.v1.GetSignalsRequest\x1a9.tinkoff.public.invest.api.contract.v1.GetSignalsResponseB\x84\x02\n" +
	")com.tinkoff.public.invest.api.contract.v1B\fSignalsProtoP\x01Z\f./;investapi\xa2\x02\x05TPIAC\xaa\x02%Tinkoff.Public.Invest.Api.Contract.V1\xca\x02&Tinkoff\\Public_\\Invest\\Api\\Contract\\V1\xe2\x022Tinkoff\\Public_\\Invest\\Api\\Contract\\V1\\GPBMetadata\xea\x02*Tinkoff::Public::Invest::Api::Contract::V1b\x06proto3"

var (
	file_adapter_tinkoff_proto_signals_proto_rawDescOnce sync.Once
	file_adapter_tinkoff_proto_signals_proto_rawDescData []byte
)

func file_adapter_tinkoff_proto_signals_proto_rawDescGZIP() []byte {
	file_adapter_tinkoff_proto_signals_proto_rawDescOnce.Do(func() {
		file_adapter_tinkoff_proto_signals_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_adapter_tinkoff_proto_signals_proto_rawDesc), len(file_adapter_tinkoff_proto_signals_proto_rawDesc)))
	})
	return file_adapter_tinkoff_proto_signals_proto_rawDescData
}

var file_adapter_tinkoff_proto_signals_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_adapter_tinkoff_proto_signals_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_adapter_tinkoff_proto_signals_proto_goTypes = []any{
	(StrategyType)(0),             // 0: tinkoff.public.invest.api.contract.v1.StrategyType
	(SignalDirection)(0),          // 1: tinkoff.public.invest.api.contract.v1.SignalDirection
	(SignalState)(0),              // 2: tinkoff.public.invest.api.contract.v1.SignalState
	(*GetStrategiesRequest)(nil),  // 3: tinkoff.public.invest.api.contract.v1.GetStrategiesRequest
	(*GetStrategiesResponse)(nil), // 4: tinkoff.public.invest.api.contract.v1.GetStrategiesResponse
	(*Strategy)(nil),              // 5: tinkoff.public.invest.api.contract.v1.Strategy
	(*GetSignalsRequest)(nil),     // 6: tinkoff.public.invest.api.contract.v1.GetSignalsRequest
	(*GetSignalsResponse)(nil),    // 7: tinkoff.public.invest.api.contract.v1.GetSignalsResponse
	(*Signal)(nil),                // 8: tinkoff.public.invest.api.contract.v1.Signal
	(*Quotation)(nil),             // 9: tinkoff.public.invest.api.contract.v1.Quotation
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*Page)(nil),                  // 11: tinkoff.public.invest.api.contract.v1.Page
	(*PageResponse)(nil),          // 12: tinkoff.public.invest.api.contract.v1.PageResponse
}
var file_adapter_tinkoff_proto_signals_proto_depIdxs = []int32{
	5,  // 0: tinkoff.public.invest.api.contract.v1.GetStrategiesResponse.strategies:type_name -> tinkoff.public.invest.api.contract.v1.Strategy
	0,  // 1: tinkoff.public.invest.api.contract.v1.Strategy.strategy_type:type_name -> tinkoff.public.invest.api.contract.v1.StrategyType
	9,  // 2: tinkoff.public.invest.api.contract.v1.Strategy.average_signal_yield:type_name -> tinkoff.public.invest.api.contract.v1.Quotation
	9,  // 3: tinkoff.public.invest.api.contract.v1.Strategy.average_signal_yield_year:type_name -> tinkoff.public.invest.api.contract.v1.Quotation
	9,  // 4: tinkoff.public.invest.api.contract.v1.Strategy.yield:type_name -> tinkoff.public.invest.api.contract.v1.Quotation
	9,  // 5: tinkoff.public.invest.api.contract.v1.Strategy.yield_year:type_name -> tinkoff.public.invest.api.contract.v1.Quotation
	0,  // 6: tinkoff.public.invest.api.contract.v1.GetSignalsRequest.strategy_type:type_name -> tinkoff.public.invest.api.contract.v1.StrategyType
	10, // 7: tinkoff.public.invest.api.contract.v1.GetSignalsRequest.from:type_name -> google.protobuf.Timestamp
	10, // 8: tinkoff.public.invest.api.contract.v1.GetSignalsRequest.to:type_name -> google.protobuf.Timestamp
	1,  // 9: tinkoff.public.invest.api.contract.v1.GetSignalsRequest.direction:type_name -> tinkoff.public.invest.api.contract.v1.SignalDirection
	2,  // 10: tinkoff.public.invest.api.contract.v1.GetSignalsRequest.active:type_name -> tinkoff.public.invest.api.contract.v1.SignalState
	11, // 11: tinkoff.public.invest.api.contract.v1.GetSignalsRequest.paging:type_name -> tinkoff.public.invest.api.contract.v1.Page
	8,  // 12: tinkoff.public.invest.api.contract.v1.GetSignalsResponse.signals:type_name -> tinkoff.public.invest.api.contract.v1.Signal
	12, // 13: tinkoff.public.invest.api.contract.v1.GetSignalsResponse.paging:type_name -> tinkoff.public.invest.api.contract.v1.PageResponse
	10, // 14: tinkoff.public.invest.api.contract.v1.Signal.create_dt:type_name -> google.protobuf.Timestamp
	1,  // 15: tinkoff.public.invest.api.contract.v1.Signal.direction:type_name -> tinkoff.public.invest.api.contract.v1.SignalDirection
	9,  // 16: tinkoff.public.invest.api.contract.v1.Signal.initial_price:type_name -> tinkoff.public.invest.api.contract.v1.Quotation
	9,  // 17: tinkoff.public.invest.api.contract.v1.Signal.target_price:type_name -> tinkoff.public.invest.api.contract.v1.Quotation
	10, // 18: tinkoff.public.invest.api.contract.v1.Signal.end_dt:type_name -> google.protobuf.Timestamp
	9,  // 19: tinkoff.public.invest.api.contract.v1.Signal.stoploss:type_name -> tinkoff.public.invest.api.contract.v1.Quotation
	9,  // 20: tinkoff.public.invest.api.contract.v1.Signal.close_price:type_name -> tinkoff.public.invest.api.contract.v1.Quotation
	10, // 21: tinkoff.public.invest.api.contract.v1.Signal.close_dt:type_name -> google.protobuf.Timestamp
	3,  // 22: tinkoff.public.invest.api.contract.v1.SignalService.GetStrategies:input_type -> tinkoff.public.invest.api.contract.v1.GetStrategiesRequest
	6,  // 23: tinkoff.public.invest.api.contract.v1.SignalService.GetSignals:input_type -> tinkoff.public.invest.api.contract.v1.GetSignalsRequest
	4,  // 24: tinkoff.public.invest.api.contract.v1.SignalService.GetStrategies:output_type -> tinkoff.public.invest.api.contract.v1.GetStrategiesResponse
	7,  // 25: tinkoff.public.invest.api.contract.v1.SignalService.GetSignals:output_type -> tinkoff.public.invest.api.contract.v1.GetSignalsResponse
	24, // [24:26] is the sub-list for method output_type
	22, // [22:24] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_adapter_tinkoff_proto_signals_proto_init() }
func file_adapter_tinkoff_proto_signals_proto_init() {
	if File_adapter_tinkoff_proto_signals_proto != nil {
		return
	}
	file_adapter_tinkoff_proto_common_proto_init()
	file_adapter_tinkoff_proto_signals_proto_msgTypes[0].OneofWrappers = []any{}
	file_adapter_tinkoff_proto_signals_proto_msgTypes[2].OneofWrappers = []any{}
	file_adapter_tinkoff_proto_signals_proto_msgTypes[3].OneofWrappers = []any{}
	file_adapter_tinkoff_proto_signals_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_adapter_tinkoff_proto_signals_proto_rawDesc), len(file_adapter_tinkoff_proto_signals_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_adapter_tinkoff_proto_signals_proto_goTypes,
		DependencyIndexes: file_adapter_tinkoff_proto_signals_proto_depIdxs,
		EnumInfos:         file_adapter_tinkoff_proto_signals_proto_enumTypes,
		MessageInfos:      file_adapter_tinkoff_proto_signals_proto_msgTypes,
	}.Build()
	File_adapter_tinkoff_proto_signals_proto = out.File
	file_adapter_tinkoff_proto_signals_proto_goTypes = nil
	file_adapter_tinkoff_proto_signals_proto_depIdxs = nil
}
