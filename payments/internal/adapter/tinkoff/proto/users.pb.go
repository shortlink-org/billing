// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: adapter/tinkoff/proto/users.proto

package investapi

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Тип счeта.
type AccountType int32

const (
	AccountType_ACCOUNT_TYPE_UNSPECIFIED AccountType = 0 //Тип аккаунта не определeн.
	AccountType_ACCOUNT_TYPE_TINKOFF     AccountType = 1 //Брокерский счeт Т-Инвестиций.
	AccountType_ACCOUNT_TYPE_TINKOFF_IIS AccountType = 2 //ИИС.
	AccountType_ACCOUNT_TYPE_INVEST_BOX  AccountType = 3 //Инвесткопилка.
	AccountType_ACCOUNT_TYPE_INVEST_FUND AccountType = 4 //Фонд денежного рынка.
)

// Enum value maps for AccountType.
var (
	AccountType_name = map[int32]string{
		0: "ACCOUNT_TYPE_UNSPECIFIED",
		1: "ACCOUNT_TYPE_TINKOFF",
		2: "ACCOUNT_TYPE_TINKOFF_IIS",
		3: "ACCOUNT_TYPE_INVEST_BOX",
		4: "ACCOUNT_TYPE_INVEST_FUND",
	}
	AccountType_value = map[string]int32{
		"ACCOUNT_TYPE_UNSPECIFIED": 0,
		"ACCOUNT_TYPE_TINKOFF":     1,
		"ACCOUNT_TYPE_TINKOFF_IIS": 2,
		"ACCOUNT_TYPE_INVEST_BOX":  3,
		"ACCOUNT_TYPE_INVEST_FUND": 4,
	}
)

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_adapter_tinkoff_proto_users_proto_enumTypes[0].Descriptor()
}

func (AccountType) Type() protoreflect.EnumType {
	return &file_adapter_tinkoff_proto_users_proto_enumTypes[0]
}

func (x AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType.Descriptor instead.
func (AccountType) EnumDescriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{0}
}

// Статус счeта.
type AccountStatus int32

const (
	AccountStatus_ACCOUNT_STATUS_UNSPECIFIED AccountStatus = 0 //Статус счeта не определeн.
	AccountStatus_ACCOUNT_STATUS_NEW         AccountStatus = 1 //Новый, в процессе открытия.
	AccountStatus_ACCOUNT_STATUS_OPEN        AccountStatus = 2 //Открытый и активный счeт.
	AccountStatus_ACCOUNT_STATUS_CLOSED      AccountStatus = 3 //Закрытый счeт.
	AccountStatus_ACCOUNT_STATUS_ALL         AccountStatus = 4 //Все счета.
)

// Enum value maps for AccountStatus.
var (
	AccountStatus_name = map[int32]string{
		0: "ACCOUNT_STATUS_UNSPECIFIED",
		1: "ACCOUNT_STATUS_NEW",
		2: "ACCOUNT_STATUS_OPEN",
		3: "ACCOUNT_STATUS_CLOSED",
		4: "ACCOUNT_STATUS_ALL",
	}
	AccountStatus_value = map[string]int32{
		"ACCOUNT_STATUS_UNSPECIFIED": 0,
		"ACCOUNT_STATUS_NEW":         1,
		"ACCOUNT_STATUS_OPEN":        2,
		"ACCOUNT_STATUS_CLOSED":      3,
		"ACCOUNT_STATUS_ALL":         4,
	}
)

func (x AccountStatus) Enum() *AccountStatus {
	p := new(AccountStatus)
	*p = x
	return p
}

func (x AccountStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_adapter_tinkoff_proto_users_proto_enumTypes[1].Descriptor()
}

func (AccountStatus) Type() protoreflect.EnumType {
	return &file_adapter_tinkoff_proto_users_proto_enumTypes[1]
}

func (x AccountStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountStatus.Descriptor instead.
func (AccountStatus) EnumDescriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{1}
}

// Уровень доступа к счeту.
type AccessLevel int32

const (
	AccessLevel_ACCOUNT_ACCESS_LEVEL_UNSPECIFIED AccessLevel = 0 //Уровень доступа не определeн.
	AccessLevel_ACCOUNT_ACCESS_LEVEL_FULL_ACCESS AccessLevel = 1 //Полный доступ к счeту.
	AccessLevel_ACCOUNT_ACCESS_LEVEL_READ_ONLY   AccessLevel = 2 //Доступ с уровнем прав «только чтение».
	AccessLevel_ACCOUNT_ACCESS_LEVEL_NO_ACCESS   AccessLevel = 3 //Доступа нет.
)

// Enum value maps for AccessLevel.
var (
	AccessLevel_name = map[int32]string{
		0: "ACCOUNT_ACCESS_LEVEL_UNSPECIFIED",
		1: "ACCOUNT_ACCESS_LEVEL_FULL_ACCESS",
		2: "ACCOUNT_ACCESS_LEVEL_READ_ONLY",
		3: "ACCOUNT_ACCESS_LEVEL_NO_ACCESS",
	}
	AccessLevel_value = map[string]int32{
		"ACCOUNT_ACCESS_LEVEL_UNSPECIFIED": 0,
		"ACCOUNT_ACCESS_LEVEL_FULL_ACCESS": 1,
		"ACCOUNT_ACCESS_LEVEL_READ_ONLY":   2,
		"ACCOUNT_ACCESS_LEVEL_NO_ACCESS":   3,
	}
)

func (x AccessLevel) Enum() *AccessLevel {
	p := new(AccessLevel)
	*p = x
	return p
}

func (x AccessLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_adapter_tinkoff_proto_users_proto_enumTypes[2].Descriptor()
}

func (AccessLevel) Type() protoreflect.EnumType {
	return &file_adapter_tinkoff_proto_users_proto_enumTypes[2]
}

func (x AccessLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessLevel.Descriptor instead.
func (AccessLevel) EnumDescriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{2}
}

// Запрос получения счетов пользователя.
type GetAccountsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *AccountStatus         `protobuf:"varint,1,opt,name=status,proto3,enum=tinkoff.public.invest.api.contract.v1.AccountStatus,oneof" json:"status,omitempty"` //Статус счета.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountsRequest) Reset() {
	*x = GetAccountsRequest{}
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountsRequest) ProtoMessage() {}

func (x *GetAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetAccountsRequest) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{0}
}

func (x *GetAccountsRequest) GetStatus() AccountStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return AccountStatus_ACCOUNT_STATUS_UNSPECIFIED
}

// Список счетов пользователя.
type GetAccountsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Массив счетов клиента.
	Accounts      []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountsResponse) Reset() {
	*x = GetAccountsResponse{}
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountsResponse) ProtoMessage() {}

func (x *GetAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountsResponse.ProtoReflect.Descriptor instead.
func (*GetAccountsResponse) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{1}
}

func (x *GetAccountsResponse) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

// Информация о счeте.
type Account struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Идентификатор счeта.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Тип счeта.
	Type AccountType `protobuf:"varint,2,opt,name=type,proto3,enum=tinkoff.public.invest.api.contract.v1.AccountType" json:"type,omitempty"`
	// Название счeта.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Статус счeта.
	Status AccountStatus `protobuf:"varint,4,opt,name=status,proto3,enum=tinkoff.public.invest.api.contract.v1.AccountStatus" json:"status,omitempty"`
	// Дата открытия счeта в часовом поясе UTC.
	OpenedDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=opened_date,json=openedDate,proto3" json:"opened_date,omitempty"`
	// Дата закрытия счeта в часовом поясе UTC.
	ClosedDate *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=closed_date,json=closedDate,proto3" json:"closed_date,omitempty"`
	// Уровень доступа к текущему счeту (определяется токеном).
	AccessLevel   AccessLevel `protobuf:"varint,7,opt,name=access_level,json=accessLevel,proto3,enum=tinkoff.public.invest.api.contract.v1.AccessLevel" json:"access_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{2}
}

func (x *Account) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Account) GetType() AccountType {
	if x != nil {
		return x.Type
	}
	return AccountType_ACCOUNT_TYPE_UNSPECIFIED
}

func (x *Account) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Account) GetStatus() AccountStatus {
	if x != nil {
		return x.Status
	}
	return AccountStatus_ACCOUNT_STATUS_UNSPECIFIED
}

func (x *Account) GetOpenedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenedDate
	}
	return nil
}

func (x *Account) GetClosedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ClosedDate
	}
	return nil
}

func (x *Account) GetAccessLevel() AccessLevel {
	if x != nil {
		return x.AccessLevel
	}
	return AccessLevel_ACCOUNT_ACCESS_LEVEL_UNSPECIFIED
}

// Запрос маржинальных показателей по счeту.
type GetMarginAttributesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Идентификатор счeта пользователя.
	AccountId     string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMarginAttributesRequest) Reset() {
	*x = GetMarginAttributesRequest{}
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMarginAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarginAttributesRequest) ProtoMessage() {}

func (x *GetMarginAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarginAttributesRequest.ProtoReflect.Descriptor instead.
func (*GetMarginAttributesRequest) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{3}
}

func (x *GetMarginAttributesRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// Маржинальные показатели по счeту.
type GetMarginAttributesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Ликвидная стоимость портфеля. [Подробнее про ликвидный портфель](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q4).
	LiquidPortfolio *MoneyValue `protobuf:"bytes,1,opt,name=liquid_portfolio,json=liquidPortfolio,proto3" json:"liquid_portfolio,omitempty"`
	// Начальная маржа — начальное обеспечение для совершения новой сделки. [Подробнее про начальную и минимальную маржу](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q6).
	StartingMargin *MoneyValue `protobuf:"bytes,2,opt,name=starting_margin,json=startingMargin,proto3" json:"starting_margin,omitempty"`
	// Минимальная маржа — это минимальное обеспечение для поддержания позиции, которую вы уже открыли. [Подробнее про начальную и минимальную маржу](https://www.tbank.ru/invest/help/brokerage/account/margin/about/#q6).
	MinimalMargin *MoneyValue `protobuf:"bytes,3,opt,name=minimal_margin,json=minimalMargin,proto3" json:"minimal_margin,omitempty"`
	// Уровень достаточности средств. Соотношение стоимости ликвидного портфеля к начальной марже.
	FundsSufficiencyLevel *Quotation `protobuf:"bytes,4,opt,name=funds_sufficiency_level,json=fundsSufficiencyLevel,proto3" json:"funds_sufficiency_level,omitempty"`
	// Объем недостающих средств. Разница между стартовой маржой и ликвидной стоимости портфеля.
	AmountOfMissingFunds *MoneyValue `protobuf:"bytes,5,opt,name=amount_of_missing_funds,json=amountOfMissingFunds,proto3" json:"amount_of_missing_funds,omitempty"`
	// Скорректированная маржа. Начальная маржа, в которой плановые позиции рассчитываются с учeтом активных заявок на покупку позиций лонг или продажу позиций шорт.
	CorrectedMargin *MoneyValue `protobuf:"bytes,6,opt,name=corrected_margin,json=correctedMargin,proto3" json:"corrected_margin,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetMarginAttributesResponse) Reset() {
	*x = GetMarginAttributesResponse{}
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMarginAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarginAttributesResponse) ProtoMessage() {}

func (x *GetMarginAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarginAttributesResponse.ProtoReflect.Descriptor instead.
func (*GetMarginAttributesResponse) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{4}
}

func (x *GetMarginAttributesResponse) GetLiquidPortfolio() *MoneyValue {
	if x != nil {
		return x.LiquidPortfolio
	}
	return nil
}

func (x *GetMarginAttributesResponse) GetStartingMargin() *MoneyValue {
	if x != nil {
		return x.StartingMargin
	}
	return nil
}

func (x *GetMarginAttributesResponse) GetMinimalMargin() *MoneyValue {
	if x != nil {
		return x.MinimalMargin
	}
	return nil
}

func (x *GetMarginAttributesResponse) GetFundsSufficiencyLevel() *Quotation {
	if x != nil {
		return x.FundsSufficiencyLevel
	}
	return nil
}

func (x *GetMarginAttributesResponse) GetAmountOfMissingFunds() *MoneyValue {
	if x != nil {
		return x.AmountOfMissingFunds
	}
	return nil
}

func (x *GetMarginAttributesResponse) GetCorrectedMargin() *MoneyValue {
	if x != nil {
		return x.CorrectedMargin
	}
	return nil
}

// Запрос текущих лимитов пользователя.
type GetUserTariffRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserTariffRequest) Reset() {
	*x = GetUserTariffRequest{}
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTariffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTariffRequest) ProtoMessage() {}

func (x *GetUserTariffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTariffRequest.ProtoReflect.Descriptor instead.
func (*GetUserTariffRequest) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{5}
}

// Текущие лимиты пользователя.
type GetUserTariffResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnaryLimits   []*UnaryLimit          `protobuf:"bytes,1,rep,name=unary_limits,json=unaryLimits,proto3" json:"unary_limits,omitempty"`    //Массив лимитов пользователя по unary-запросам.
	StreamLimits  []*StreamLimit         `protobuf:"bytes,2,rep,name=stream_limits,json=streamLimits,proto3" json:"stream_limits,omitempty"` //Массив лимитов пользователей для stream-соединений.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserTariffResponse) Reset() {
	*x = GetUserTariffResponse{}
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTariffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTariffResponse) ProtoMessage() {}

func (x *GetUserTariffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTariffResponse.ProtoReflect.Descriptor instead.
func (*GetUserTariffResponse) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserTariffResponse) GetUnaryLimits() []*UnaryLimit {
	if x != nil {
		return x.UnaryLimits
	}
	return nil
}

func (x *GetUserTariffResponse) GetStreamLimits() []*StreamLimit {
	if x != nil {
		return x.StreamLimits
	}
	return nil
}

// Лимит unary-методов.
type UnaryLimit struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	LimitPerMinute int32                  `protobuf:"varint,1,opt,name=limit_per_minute,json=limitPerMinute,proto3" json:"limit_per_minute,omitempty"` //Количество unary-запросов в минуту.
	Methods        []string               `protobuf:"bytes,2,rep,name=methods,proto3" json:"methods,omitempty"`                                        //Названия методов.
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UnaryLimit) Reset() {
	*x = UnaryLimit{}
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnaryLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnaryLimit) ProtoMessage() {}

func (x *UnaryLimit) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnaryLimit.ProtoReflect.Descriptor instead.
func (*UnaryLimit) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{7}
}

func (x *UnaryLimit) GetLimitPerMinute() int32 {
	if x != nil {
		return x.LimitPerMinute
	}
	return 0
}

func (x *UnaryLimit) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

// Лимит stream-соединений.
type StreamLimit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`    //Максимальное количество stream-соединений.
	Streams       []string               `protobuf:"bytes,2,rep,name=streams,proto3" json:"streams,omitempty"` //Названия stream-методов.
	Open          int32                  `protobuf:"varint,3,opt,name=open,proto3" json:"open,omitempty"`      //Текущее количество открытых stream-соединений.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamLimit) Reset() {
	*x = StreamLimit{}
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLimit) ProtoMessage() {}

func (x *StreamLimit) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLimit.ProtoReflect.Descriptor instead.
func (*StreamLimit) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{8}
}

func (x *StreamLimit) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *StreamLimit) GetStreams() []string {
	if x != nil {
		return x.Streams
	}
	return nil
}

func (x *StreamLimit) GetOpen() int32 {
	if x != nil {
		return x.Open
	}
	return 0
}

// Запрос информации о пользователе.
type GetInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInfoRequest) Reset() {
	*x = GetInfoRequest{}
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRequest) ProtoMessage() {}

func (x *GetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRequest.ProtoReflect.Descriptor instead.
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{9}
}

// Информация о пользователе.
type GetInfoResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	PremStatus           bool                   `protobuf:"varint,1,opt,name=prem_status,json=premStatus,proto3" json:"prem_status,omitempty"`                                  //Признак премиум клиента.
	QualStatus           bool                   `protobuf:"varint,2,opt,name=qual_status,json=qualStatus,proto3" json:"qual_status,omitempty"`                                  //Признак квалифицированного инвестора.
	QualifiedForWorkWith []string               `protobuf:"bytes,3,rep,name=qualified_for_work_with,json=qualifiedForWorkWith,proto3" json:"qualified_for_work_with,omitempty"` //Набор требующих тестирования инструментов и возможностей, с которыми может работать пользователь. [Подробнее](/invest/services/accounts/faq_users).
	Tariff               string                 `protobuf:"bytes,4,opt,name=tariff,proto3" json:"tariff,omitempty"`                                                             //Наименование тарифа пользователя.
	UserId               string                 `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                               //Идентификатор пользователя.
	RiskLevelCode        string                 `protobuf:"bytes,12,opt,name=risk_level_code,json=riskLevelCode,proto3" json:"risk_level_code,omitempty"`                       // Категория риска.
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetInfoResponse) Reset() {
	*x = GetInfoResponse{}
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoResponse) ProtoMessage() {}

func (x *GetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adapter_tinkoff_proto_users_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoResponse.ProtoReflect.Descriptor instead.
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return file_adapter_tinkoff_proto_users_proto_rawDescGZIP(), []int{10}
}

func (x *GetInfoResponse) GetPremStatus() bool {
	if x != nil {
		return x.PremStatus
	}
	return false
}

func (x *GetInfoResponse) GetQualStatus() bool {
	if x != nil {
		return x.QualStatus
	}
	return false
}

func (x *GetInfoResponse) GetQualifiedForWorkWith() []string {
	if x != nil {
		return x.QualifiedForWorkWith
	}
	return nil
}

func (x *GetInfoResponse) GetTariff() string {
	if x != nil {
		return x.Tariff
	}
	return ""
}

func (x *GetInfoResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetInfoResponse) GetRiskLevelCode() string {
	if x != nil {
		return x.RiskLevelCode
	}
	return ""
}

var File_adapter_tinkoff_proto_users_proto protoreflect.FileDescriptor

const file_adapter_tinkoff_proto_users_proto_rawDesc = "" +
	"\n" +
	"!adapter/tinkoff/proto/users.proto\x12%tinkoff.public.invest.api.contract.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\"adapter/tinkoff/proto/common.proto\"r\n" +
	"\x12GetAccountsRequest\x12Q\n" +
	"\x06status\x18\x01 \x01(\x0e24.tinkoff.public.invest.api.contract.v1.AccountStatusH\x00R\x06status\x88\x01\x01B\t\n" +
	"\a_status\"a\n" +
	"\x13GetAccountsResponse\x12J\n" +
	"\baccounts\x18\x01 \x03(\v2..tinkoff.public.invest.api.contract.v1.AccountR\baccounts\"\x94\x03\n" +
	"\aAccount\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12F\n" +
	"\x04type\x18\x02 \x01(\x0e22.tinkoff.public.invest.api.contract.v1.AccountTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12L\n" +
	"\x06status\x18\x04 \x01(\x0e24.tinkoff.public.invest.api.contract.v1.AccountStatusR\x06status\x12;\n" +
	"\vopened_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"openedDate\x12;\n" +
	"\vclosed_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"closedDate\x12U\n" +
	"\faccess_level\x18\a \x01(\x0e22.tinkoff.public.invest.api.contract.v1.AccessLevelR\vaccessLevel\"@\n" +
	"\x1aGetMarginAttributesRequest\x12\"\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tB\x03\xe0A\x02R\taccountId\"\xe3\x04\n" +
	"\x1bGetMarginAttributesResponse\x12\\\n" +
	"\x10liquid_portfolio\x18\x01 \x01(\v21.tinkoff.public.invest.api.contract.v1.MoneyValueR\x0fliquidPortfolio\x12Z\n" +
	"\x0fstarting_margin\x18\x02 \x01(\v21.tinkoff.public.invest.api.contract.v1.MoneyValueR\x0estartingMargin\x12X\n" +
	"\x0eminimal_margin\x18\x03 \x01(\v21.tinkoff.public.invest.api.contract.v1.MoneyValueR\rminimalMargin\x12h\n" +
	"\x17funds_sufficiency_level\x18\x04 \x01(\v20.tinkoff.public.invest.api.contract.v1.QuotationR\x15fundsSufficiencyLevel\x12h\n" +
	"\x17amount_of_missing_funds\x18\x05 \x01(\v21.tinkoff.public.invest.api.contract.v1.MoneyValueR\x14amountOfMissingFunds\x12\\\n" +
	"\x10corrected_margin\x18\x06 \x01(\v21.tinkoff.public.invest.api.contract.v1.MoneyValueR\x0fcorrectedMargin\"\x16\n" +
	"\x14GetUserTariffRequest\"\xc6\x01\n" +
	"\x15GetUserTariffResponse\x12T\n" +
	"\funary_limits\x18\x01 \x03(\v21.tinkoff.public.invest.api.contract.v1.UnaryLimitR\vunaryLimits\x12W\n" +
	"\rstream_limits\x18\x02 \x03(\v22.tinkoff.public.invest.api.contract.v1.StreamLimitR\fstreamLimits\"P\n" +
	"\n" +
	"UnaryLimit\x12(\n" +
	"\x10limit_per_minute\x18\x01 \x01(\x05R\x0elimitPerMinute\x12\x18\n" +
	"\amethods\x18\x02 \x03(\tR\amethods\"Q\n" +
	"\vStreamLimit\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x18\n" +
	"\astreams\x18\x02 \x03(\tR\astreams\x12\x12\n" +
	"\x04open\x18\x03 \x01(\x05R\x04open\"\x10\n" +
	"\x0eGetInfoRequest\"\xe3\x01\n" +
	"\x0fGetInfoResponse\x12\x1f\n" +
	"\vprem_status\x18\x01 \x01(\bR\n" +
	"premStatus\x12\x1f\n" +
	"\vqual_status\x18\x02 \x01(\bR\n" +
	"qualStatus\x125\n" +
	"\x17qualified_for_work_with\x18\x03 \x03(\tR\x14qualifiedForWorkWith\x12\x16\n" +
	"\x06tariff\x18\x04 \x01(\tR\x06tariff\x12\x17\n" +
	"\auser_id\x18\t \x01(\tR\x06userId\x12&\n" +
	"\x0frisk_level_code\x18\f \x01(\tR\rriskLevelCode*\x9e\x01\n" +
	"\vAccountType\x12\x1c\n" +
	"\x18ACCOUNT_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14ACCOUNT_TYPE_TINKOFF\x10\x01\x12\x1c\n" +
	"\x18ACCOUNT_TYPE_TINKOFF_IIS\x10\x02\x12\x1b\n" +
	"\x17ACCOUNT_TYPE_INVEST_BOX\x10\x03\x12\x1c\n" +
	"\x18ACCOUNT_TYPE_INVEST_FUND\x10\x04*\x93\x01\n" +
	"\rAccountStatus\x12\x1e\n" +
	"\x1aACCOUNT_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12ACCOUNT_STATUS_NEW\x10\x01\x12\x17\n" +
	"\x13ACCOUNT_STATUS_OPEN\x10\x02\x12\x19\n" +
	"\x15ACCOUNT_STATUS_CLOSED\x10\x03\x12\x16\n" +
	"\x12ACCOUNT_STATUS_ALL\x10\x04*\xa1\x01\n" +
	"\vAccessLevel\x12$\n" +
	" ACCOUNT_ACCESS_LEVEL_UNSPECIFIED\x10\x00\x12$\n" +
	" ACCOUNT_ACCESS_LEVEL_FULL_ACCESS\x10\x01\x12\"\n" +
	"\x1eACCOUNT_ACCESS_LEVEL_READ_ONLY\x10\x02\x12\"\n" +
	"\x1eACCOUNT_ACCESS_LEVEL_NO_ACCESS\x10\x032\xbb\x04\n" +
	"\fUsersService\x12\x84\x01\n" +
	"\vGetAccounts\x129.tinkoff.public.invest.api.contract.v1.GetAccountsRequest\x1a:.tinkoff.public.invest.api.contract.v1.GetAccountsResponse\x12\x9c\x01\n" +
	"\x13GetMarginAttributes\x12A.tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest\x1aB.tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse\x12\x8a\x01\n" +
	"\rGetUserTariff\x12;.tinkoff.public.invest.api.contract.v1.GetUserTariffRequest\x1a<.tinkoff.public.invest.api.contract.v1.GetUserTariffResponse\x12x\n" +
	"\aGetInfo\x125.tinkoff.public.invest.api.contract.v1.GetInfoRequest\x1a6.tinkoff.public.invest.api.contract.v1.GetInfoResponseB\x82\x02\n" +
	")com.tinkoff.public.invest.api.contract.v1B\n" +
	"UsersProtoP\x01Z\f./;investapi\xa2\x02\x05TPIAC\xaa\x02%Tinkoff.Public.Invest.Api.Contract.V1\xca\x02&Tinkoff\\Public_\\Invest\\Api\\Contract\\V1\xe2\x022Tinkoff\\Public_\\Invest\\Api\\Contract\\V1\\GPBMetadata\xea\x02*Tinkoff::Public::Invest::Api::Contract::V1b\x06proto3"

var (
	file_adapter_tinkoff_proto_users_proto_rawDescOnce sync.Once
	file_adapter_tinkoff_proto_users_proto_rawDescData []byte
)

func file_adapter_tinkoff_proto_users_proto_rawDescGZIP() []byte {
	file_adapter_tinkoff_proto_users_proto_rawDescOnce.Do(func() {
		file_adapter_tinkoff_proto_users_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_adapter_tinkoff_proto_users_proto_rawDesc), len(file_adapter_tinkoff_proto_users_proto_rawDesc)))
	})
	return file_adapter_tinkoff_proto_users_proto_rawDescData
}

var file_adapter_tinkoff_proto_users_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_adapter_tinkoff_proto_users_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_adapter_tinkoff_proto_users_proto_goTypes = []any{
	(AccountType)(0),                    // 0: tinkoff.public.invest.api.contract.v1.AccountType
	(AccountStatus)(0),                  // 1: tinkoff.public.invest.api.contract.v1.AccountStatus
	(AccessLevel)(0),                    // 2: tinkoff.public.invest.api.contract.v1.AccessLevel
	(*GetAccountsRequest)(nil),          // 3: tinkoff.public.invest.api.contract.v1.GetAccountsRequest
	(*GetAccountsResponse)(nil),         // 4: tinkoff.public.invest.api.contract.v1.GetAccountsResponse
	(*Account)(nil),                     // 5: tinkoff.public.invest.api.contract.v1.Account
	(*GetMarginAttributesRequest)(nil),  // 6: tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest
	(*GetMarginAttributesResponse)(nil), // 7: tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse
	(*GetUserTariffRequest)(nil),        // 8: tinkoff.public.invest.api.contract.v1.GetUserTariffRequest
	(*GetUserTariffResponse)(nil),       // 9: tinkoff.public.invest.api.contract.v1.GetUserTariffResponse
	(*UnaryLimit)(nil),                  // 10: tinkoff.public.invest.api.contract.v1.UnaryLimit
	(*StreamLimit)(nil),                 // 11: tinkoff.public.invest.api.contract.v1.StreamLimit
	(*GetInfoRequest)(nil),              // 12: tinkoff.public.invest.api.contract.v1.GetInfoRequest
	(*GetInfoResponse)(nil),             // 13: tinkoff.public.invest.api.contract.v1.GetInfoResponse
	(*timestamppb.Timestamp)(nil),       // 14: google.protobuf.Timestamp
	(*MoneyValue)(nil),                  // 15: tinkoff.public.invest.api.contract.v1.MoneyValue
	(*Quotation)(nil),                   // 16: tinkoff.public.invest.api.contract.v1.Quotation
}
var file_adapter_tinkoff_proto_users_proto_depIdxs = []int32{
	1,  // 0: tinkoff.public.invest.api.contract.v1.GetAccountsRequest.status:type_name -> tinkoff.public.invest.api.contract.v1.AccountStatus
	5,  // 1: tinkoff.public.invest.api.contract.v1.GetAccountsResponse.accounts:type_name -> tinkoff.public.invest.api.contract.v1.Account
	0,  // 2: tinkoff.public.invest.api.contract.v1.Account.type:type_name -> tinkoff.public.invest.api.contract.v1.AccountType
	1,  // 3: tinkoff.public.invest.api.contract.v1.Account.status:type_name -> tinkoff.public.invest.api.contract.v1.AccountStatus
	14, // 4: tinkoff.public.invest.api.contract.v1.Account.opened_date:type_name -> google.protobuf.Timestamp
	14, // 5: tinkoff.public.invest.api.contract.v1.Account.closed_date:type_name -> google.protobuf.Timestamp
	2,  // 6: tinkoff.public.invest.api.contract.v1.Account.access_level:type_name -> tinkoff.public.invest.api.contract.v1.AccessLevel
	15, // 7: tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse.liquid_portfolio:type_name -> tinkoff.public.invest.api.contract.v1.MoneyValue
	15, // 8: tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse.starting_margin:type_name -> tinkoff.public.invest.api.contract.v1.MoneyValue
	15, // 9: tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse.minimal_margin:type_name -> tinkoff.public.invest.api.contract.v1.MoneyValue
	16, // 10: tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse.funds_sufficiency_level:type_name -> tinkoff.public.invest.api.contract.v1.Quotation
	15, // 11: tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse.amount_of_missing_funds:type_name -> tinkoff.public.invest.api.contract.v1.MoneyValue
	15, // 12: tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse.corrected_margin:type_name -> tinkoff.public.invest.api.contract.v1.MoneyValue
	10, // 13: tinkoff.public.invest.api.contract.v1.GetUserTariffResponse.unary_limits:type_name -> tinkoff.public.invest.api.contract.v1.UnaryLimit
	11, // 14: tinkoff.public.invest.api.contract.v1.GetUserTariffResponse.stream_limits:type_name -> tinkoff.public.invest.api.contract.v1.StreamLimit
	3,  // 15: tinkoff.public.invest.api.contract.v1.UsersService.GetAccounts:input_type -> tinkoff.public.invest.api.contract.v1.GetAccountsRequest
	6,  // 16: tinkoff.public.invest.api.contract.v1.UsersService.GetMarginAttributes:input_type -> tinkoff.public.invest.api.contract.v1.GetMarginAttributesRequest
	8,  // 17: tinkoff.public.invest.api.contract.v1.UsersService.GetUserTariff:input_type -> tinkoff.public.invest.api.contract.v1.GetUserTariffRequest
	12, // 18: tinkoff.public.invest.api.contract.v1.UsersService.GetInfo:input_type -> tinkoff.public.invest.api.contract.v1.GetInfoRequest
	4,  // 19: tinkoff.public.invest.api.contract.v1.UsersService.GetAccounts:output_type -> tinkoff.public.invest.api.contract.v1.GetAccountsResponse
	7,  // 20: tinkoff.public.invest.api.contract.v1.UsersService.GetMarginAttributes:output_type -> tinkoff.public.invest.api.contract.v1.GetMarginAttributesResponse
	9,  // 21: tinkoff.public.invest.api.contract.v1.UsersService.GetUserTariff:output_type -> tinkoff.public.invest.api.contract.v1.GetUserTariffResponse
	13, // 22: tinkoff.public.invest.api.contract.v1.UsersService.GetInfo:output_type -> tinkoff.public.invest.api.contract.v1.GetInfoResponse
	19, // [19:23] is the sub-list for method output_type
	15, // [15:19] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_adapter_tinkoff_proto_users_proto_init() }
func file_adapter_tinkoff_proto_users_proto_init() {
	if File_adapter_tinkoff_proto_users_proto != nil {
		return
	}
	file_adapter_tinkoff_proto_common_proto_init()
	file_adapter_tinkoff_proto_users_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_adapter_tinkoff_proto_users_proto_rawDesc), len(file_adapter_tinkoff_proto_users_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_adapter_tinkoff_proto_users_proto_goTypes,
		DependencyIndexes: file_adapter_tinkoff_proto_users_proto_depIdxs,
		EnumInfos:         file_adapter_tinkoff_proto_users_proto_enumTypes,
		MessageInfos:      file_adapter_tinkoff_proto_users_proto_msgTypes,
	}.Build()
	File_adapter_tinkoff_proto_users_proto = out.File
	file_adapter_tinkoff_proto_users_proto_goTypes = nil
	file_adapter_tinkoff_proto_users_proto_depIdxs = nil
}
